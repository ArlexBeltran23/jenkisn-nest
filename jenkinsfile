pipeline {
    agent any

    environment {
        registry = "arlexbeltran/jenkins-nest"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies'){
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Lint') {
            steps {
                sh 'npm run lint'
            }
        }

        stage('Test') {
            steps {
                sh 'npm run test'
            }
        }

        stage('Build Docker Image') {
            when {
                expression { return !env.CHANGE_ID }
            }
            steps {
                script {
                    dockerImage = docker.build(registry, "-f Dockerfile .")
                }
            }
        }

        stage('Push to Docker Hub') {
            when {
                expression { return !env.CHANGE_ID }
            }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'AngularHub') {
                        dockerImage.push("${env.BUILD_NUMBER}")
                        dockerImage.push("latest")
                    }
                }
            }
        }

           stage('PR Validation') {
            when {
                expression { return env.CHANGE_ID || env.BRANCH_NAME == 'master' }
            }
            steps {
                echo 'Validando Pull Request...'
                
                // Instalar dependencias para validación
                sh 'npm install'
                
                // Linting
                echo 'Ejecutando Linting...'
                sh 'npm run lint'
                
                // Pruebas unitarias
                echo 'Ejecutando Pruebas Unitarias...'
                sh 'npm run test'
                
                // Análisis de seguridad
                echo 'Ejecutando Análisis de Seguridad...'
                sh 'npm audit --audit-level=high'
            }
        }
    }

    post {
        success {
            echo '¡Pipeline completado exitosamente!'
        }
        failure {
            echo '¡Pipeline falló! Revisa los logs para más detalles.'
        }
    }
}
