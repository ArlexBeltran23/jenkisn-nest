pipeline {
    agent any

    environment {
        registry = "arlexbeltran/jenkins-nest"
    }

    triggers {
        // Trigger builds on pull request events (GitHub example)
        githubPullRequest {
            events {
                Opened()
                Updated()
                Reopened()
            }
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        // Uncomment and use these stages if needed
        // stage('Lint') {
        //     steps {
        //         sh 'npm run lint'
        //     }
        // }

        // stage('Test') {
        //     steps {
        //         sh 'npm run test'
        //     }
        // }

        stage('Build Docker Image') {
            when {
                expression { return !env.CHANGE_ID }
            }
            steps {
                script {
                    dockerImage = docker.build(registry, "-f Dockerfile .")
                }
            }
        }

        stage('Push to Docker Hub') {
            when {
                expression { return !env.CHANGE_ID }
            }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'AngularHub') {
                        dockerImage.push("${env.BUILD_NUMBER}")
                        dockerImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                def status = currentBuild.currentResult
                if (status == 'SUCCESS') {
                    echo '¡Pipeline completado exitosamente!'
                } else {
                    echo '¡Pipeline falló! Revisa los logs para más detalles.'
                }
            }
        }

        success {
            // Report success to PR (if using GitHub)
            script {
                if (env.CHANGE_ID) {
                    githubNotify context: 'Jenkins', description: 'Build successful', status: 'SUCCESS', targetUrl: "${env.BUILD_URL}"
                }
            }
        }

        failure {
            // Report failure to PR (if using GitHub)
            script {
                if (env.CHANGE_ID) {
                    githubNotify context: 'Jenkins', description: 'Build failed', status: 'FAILURE', targetUrl: "${env.BUILD_URL}"
                }
            }
        }
    }
}
