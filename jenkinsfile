pipeline {
    agent any

    environment {
        registry = "arlexbeltran/jenkins-nest"
        githubCredentialsId = 'AngularPipe'
    }

    stages {
        stage('Clean Up') {
            steps {
                script {
                    // Clean up steps
                    echo 'Cleaning up workspace...'
                    deleteDir() 
                }
            }
        }
        
        stage('Checkout') {
            steps {
                script {
                    
                    echo 'Checking out code...'
                    checkout scm
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    
                    echo 'Running tests...'
                    
                }
            }
        }
          stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(registry, "-f Dockerfile .")
                }
            }
        }
           stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'AngularHub') {
                        dockerImage.push("${env.BUILD_NUMBER}")
                        dockerImage.push("latest")
                    }
                }
            }
        }
    }
        
        stage('Static Code Analysis') {
            steps {
                script {
                    
                    echo 'Running static code analysis...'
                
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    echo 'Building Docker image...'
                    sh 'docker build -t my-image .'
                }
            }
        }
        
        stage('Publish Docker Image') {
            steps {
                script {
                    // Publish Docker image to ECR or DockerHub
                    echo 'Publishing Docker image...'
                    // Example: sh 'docker push my-image'
                }
            }
        }
    }
    
    post {
        always {
            script {
                // Steps to run always, for example cleanup
                echo 'Pipeline finished, performing cleanup...'
                deleteDir()
            }
        }
        success {
            script {
                // Steps to run on success
                echo 'Pipeline succeeded!'
            }
        }
        failure {
            script {
                // Steps to run on failure
                echo 'Pipeline failed.'
            }
        }
    }
}
